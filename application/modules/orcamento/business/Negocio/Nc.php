<?php

/**
 * Contém regras negociais específicas desta funcionalidade
 *
 * e-Admin
 * e-Orçamento
 * Business - Negócio
 *
 * @author Gesley B Rodrigues <rodrigues.gesley@gmail.com>
 */

/**
 * Contém as regras negociais sobre importação de nota de crédito
 *
 * @category Orcamento
 * @package Orcamento_Business_Negocio_Importarnc
 * @author Gesley B Rodrigues <rodrigues.gesley@gmail.com>
 * @license Creative Commons Atribuição 3.0 não adaptada
 *          <http://creativecommons.org/licenses/by/3.0/deed.pt_BR>
 * @ignore Este código é livre para uso dentro do TRF! Fora do TRF pode apenas
 *         servir como fonte de estudo ou base para futuros códigos-fonte sem
 *         nenhuma restrição, salvo pelas informações de @copyright e @author
 *         que devem ser mantidas inalteradas.
 * @copyright Tribunal Regional Federal ©2007-2014 <http://www.trf1.jus.br>
 */
class Orcamento_Business_Negocio_Nc extends Orcamento_Business_Negocio_Base
{

    /**
     * Instancia as variaveis na inicialização
     *
     */
    public function init ()
    {      
        // Instancia a classe model
        $this->_model = new Orcamento_Model_DbTable_Nocr ();

        // Define a negocio
        $this->_negocio = 'nc';
    }

    public function incluir($dados)
    {
        return parent::incluir($dados); // TODO: Change the autogenerated stub
    }

    /**
     * Sobrescreve a classe incluir da business
     */
    public function incluirDadosImportados(array $dados, $txtName = null)
    {
        $inseridos = 0;
        foreach ( $dados as $n) {

            $modelImportacao = new Orcamento_Business_Negocio_Importarnc ();
            $modelImportacao->incluir($n);

            // tratamentos
            unset($n["IMPD_TX_LINHA"]);
            unset($n['NOME_ARQUIVO']);

            // verifica se ja existe a nota de credito e a deleta
            $existeNOCR = $this->existeNC($n['NOCR_CD_NOTA_CREDITO']);

            if( $existeNOCR["NOCR_CD_NOTA_CREDITO"] ){
                $this->deleteNC($n["NOCR_CD_NOTA_CREDITO"]);
            }

            // verifica se a despesa existe
            $negocioDespesa = new Trf1_Orcamento_Negocio_Despesa ();
            if( $n['NOCR_NR_DESPESA'] ){
                $despesa = $negocioDespesa->retornaDespesa( $n['NOCR_NR_DESPESA'] );
                // se não existe grava o campo como nulo
                if (!$despesa){
                    $n['NOCR_NR_DESPESA'] = "";
                }
            }
            // Verifica o ptres
            $negocioPtres = new Trf1_Orcamento_Negocio_Ptres();
            if( $n['NOCR_CD_PT_RESUMIDO'] ){
                $ptres = $negocioPtres->retornaRegistro($n['NOCR_CD_PT_RESUMIDO']);
                if(!$ptres){
                    $n['NOCR_CD_PT_RESUMIDO'] = "";
                }
            }

            // finalmente salva
            $insert = parent::incluir ( $n );
            if(!$insert['sucesso']){
                $notasnaoinseridas[] = $n;
            }
            $inseridos += 1;
        }

        $this->updateValorAcertadoNc();

        $resultado = array(
            'INSERIDOS' => $inseridos,
            'NAO_INSERIDOS' => $notasnaoinseridas
        );

        return $resultado;
    }

    /* 
     * Atualiza o campo acertado
     */
    public function updateValorAcertadoNc(){
        $sql = "
        UPDATE
            CEO.CEO_TB_NOCR_NOTA_CREDITO
                SET
                    NOCR_VL_NC_ACERTADO = NOCR_VL_NC * (-1)
                WHERE
                    NOCR_CD_EVENTO IN (
                            SELECT EVEN_CD_EVENTO FROM CEO.CEO_TB_EVEN_EVENTO_NE WHERE EVEN_IC_SINAL_EVENTO = 1
                            )
        ";
        $this->executaQuery($sql, true);
    }

    /**
     * Atualiza ncs que já existam no banco de dados
     * @param array $n - nota de credito
     * @return array
     */
    public function updateNC($n)
    {
        $sql = "
                UPDATE
                    CEO_TB_NOCR_NOTA_CREDITO SET
                            NOCR_CD_UG_OPERADOR           = " . $n['NOCR_CD_UG_OPERADOR'] . ",
                            NOCR_CD_TIPO_NC               = '" . $n['NOCR_CD_TIPO_NC'] . "',
                            NOCR_CD_FONTE                 = " . $n['NOCR_CD_FONTE'] . ",
                            NOCR_CD_PT_RESUMIDO           = " . $n['NOCR_CD_PT_RESUMIDO'] . ",
                            NOCR_CD_VINCULACAO            = " . $n['NOCR_CD_VINCULACAO'] . ",
                            NOCR_NR_DESPESA               = " . $n['NOCR_NR_DESPESA'] . ",
                            NOCR_CD_ELEMENTO_DESPESA_SUB  = " . $n['NOCR_CD_ELEMENTO_DESPESA_SUB'] . ",
                            NOCR_DH_NC                    = " . $n['NOCR_DH_NC'] . ",
                            NOCR_DT_EMISSAO               = " . $n['NOCR_DT_EMISSAO'] . ",
                            NOCR_CD_CATEGORIA             = '" . $n['NOCR_CD_CATEGORIA'] . "',
                            NOCR_DS_OBSERVACAO            = '" . trim($n['NOCR_DS_OBSERVACAO']) . "',
                            NOCR_VL_NC                    = " . $n['NOCR_VL_NC'] . ",
                            NOCR_VL_NC_ACERTADO           =  " . $n['NOCR_VL_NC_ACERTADO'] . ",
                            NOCR_CD_UG_FAVORECIDO         = " . $n['NOCR_CD_UG_FAVORECIDO'] . ",
                            NOCR_CD_EVENTO                = " . $n['NOCR_CD_EVENTO'] . ",
                            NOCR_NR_DESPESA_RESERVA       = " . $n['NOCR_NR_DESPESA_RESERVA'] . ",
                            NOCR_IC_ACERTADO_MANUALMENTE  = " . $n['NOCR_IC_ACERTADO_MANUALMENTE'] . "
                    WHERE
                            NOCR_CD_NOTA_CREDITO          = '" . $n['NOCR_CD_NOTA_CREDITO'] . "'
        ";

        $banco = Zend_Db_Table::getDefaultAdapter();
        return $banco->query($sql);
    }


    /**
     * Verifica se a NC já existe
     * @param int $nc Numero da Nota de Empenho
     * @return bool
     */    
    public function existeNC ($nc)
    {
        $banco = Zend_Db_Table::getDefaultAdapter();
        $sql = "
                SELECT 
                    CASE WHEN COUNT(NOCR_CD_NOTA_CREDITO) > 0
                    THEN 'true'
                    ELSE 'false'
                    END AS NOCR_CD_NOTA_CREDITO
                FROM CEO_TB_NOCR_NOTA_CREDITO
                WHERE NOCR_CD_NOTA_CREDITO = '$nc' ";

        return $banco->fetchRow($sql);
    }
    
    /**
     * Exclui uma NC
     * @param int $nc Numero da Nota de Empenho
     * @return bool
     */      
    public function deleteNC ($nc)
    {
        $sql = "DELETE FROM CEO_TB_NOCR_NOTA_CREDITO
                WHERE NOCR_CD_NOTA_CREDITO IN('$nc')";

        $banco = Zend_Db_Table::getDefaultAdapter();

        return $banco->query($sql);
    }

}
